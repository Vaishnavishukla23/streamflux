{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../flask-api.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction DeviceDataComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5)(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.errorMessage);\n  }\n}\nfunction DeviceDataComponent_table_9_tr_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r3.device_id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r3.water_level);\n  }\n}\nfunction DeviceDataComponent_table_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 6)(1, \"thead\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4, \"Device ID\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"Water Level\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\");\n    i0.ɵɵtext(8, \"Other Field 2\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(9, \"tbody\");\n    i0.ɵɵtemplate(10, DeviceDataComponent_table_9_tr_10_Template, 5, 2, \"tr\", 7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(10);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.data);\n  }\n}\nexport class DeviceDataComponent {\n  constructor(flaskApiService) {\n    this.flaskApiService = flaskApiService;\n    this.data = []; // Array to store the response data\n    this.errorMessage = null;\n  }\n  ngOnInit() {}\n  getData() {\n    this.flaskApiService.getData(this.deviceId).subscribe(response => {\n      this.data = response; // Assign response to data array\n      this.errorMessage = null; // Clear any previous errors\n    }, error => {\n      console.error('Error fetching data', error);\n      this.errorMessage = 'An error occurred while fetching data. Please try again.';\n    });\n  }\n  static #_ = this.ɵfac = function DeviceDataComponent_Factory(t) {\n    return new (t || DeviceDataComponent)(i0.ɵɵdirectiveInject(i1.FlaskApiService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DeviceDataComponent,\n    selectors: [[\"app-device-data\"]],\n    decls: 10,\n    vars: 3,\n    consts: [[\"for\", \"deviceId\"], [\"id\", \"deviceId\", \"placeholder\", \"Enter Device ID\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"], [\"class\", \"error\", 4, \"ngIf\"], [\"border\", \"1\", 4, \"ngIf\"], [1, \"error\"], [\"border\", \"1\"], [4, \"ngFor\", \"ngForOf\"]],\n    template: function DeviceDataComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n        i0.ɵɵtext(2, \"Device Data\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"label\", 0);\n        i0.ɵɵtext(4, \"Device ID:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"input\", 1);\n        i0.ɵɵlistener(\"ngModelChange\", function DeviceDataComponent_Template_input_ngModelChange_5_listener($event) {\n          return ctx.deviceId = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function DeviceDataComponent_Template_button_click_6_listener() {\n          return ctx.getData();\n        });\n        i0.ɵɵtext(7, \"Get Data\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(8, DeviceDataComponent_div_8_Template, 3, 1, \"div\", 3);\n        i0.ɵɵtemplate(9, DeviceDataComponent_table_9_Template, 11, 1, \"table\", 4);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.deviceId);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.data.length > 0);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":";;;;;;IAMIA,8BAAwC;IACnCA,YAAkB;IAAAA,iBAAI;;;;IAAtBA,eAAkB;IAAlBA,yCAAkB;;;;;IAcnBA,0BAA8B;IAExBA,YAAoB;IAAAA,iBAAK;IAC7BA,0BAAI;IAAAA,YAAsB;IAAAA,iBAAK;;;;IAD3BA,eAAoB;IAApBA,uCAAoB;IACpBA,eAAsB;IAAtBA,yCAAsB;;;;;IAdhCA,gCAA0C;IAIhCA,yBAAS;IAAAA,iBAAK;IAClBA,0BAAI;IAAAA,2BAAW;IAAAA,iBAAK;IACpBA,0BAAI;IAAAA,6BAAa;IAAAA,iBAAK;IAI1BA,6BAAO;IACLA,4EAKK;IACPA,iBAAQ;;;;IANeA,gBAAO;IAAPA,qCAAO;;;ACbpC,OAAM,MAAOC,mBAAmB;EAK9BC,YAAoBC,eAAgC;IAAhC,oBAAe,GAAfA,eAAe;IAHnC,SAAI,GAAU,EAAE,CAAC,CAAE;IACnB,iBAAY,GAAkB,IAAI;EAEsB;EAExDC,QAAQ,IAAW;EAEnBC,OAAO;IACL,IAAI,CAACF,eAAe,CAACE,OAAO,CAAC,IAAI,CAACC,QAAQ,CAAC,CAACC,SAAS,CACnDC,QAAQ,IAAG;MACT,IAAI,CAACC,IAAI,GAAGD,QAAQ,CAAC,CAAE;MACvB,IAAI,CAACE,YAAY,GAAG,IAAI,CAAC,CAAE;IAC7B,CAAC,EACDC,KAAK,IAAG;MACNC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3C,IAAI,CAACD,YAAY,GAAG,0DAA0D;IAChF,CAAC,CACF;EACH;EAAC;qBApBUT,mBAAmB;EAAA;EAAA;UAAnBA,mBAAmB;IAAAY;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QDRhCjB,2BAAK;QACGA,2BAAW;QAAAA,iBAAK;QACpBA,gCAAsB;QAAAA,0BAAU;QAAAA,iBAAQ;QACxCA,gCAA0E;QAArDA;UAAA;QAAA,EAAsB;QAA3CA,iBAA0E;QAC1EA,iCAA4B;QAApBA;UAAA,OAASkB,aAAS;QAAA,EAAC;QAAClB,wBAAQ;QAAAA,iBAAS;QAE7CA,oEAEM;QAENA,yEAkBQ;QACVA,iBAAM;;;QA1BiBA,eAAsB;QAAtBA,sCAAsB;QAGrCA,eAAkB;QAAlBA,uCAAkB;QAIhBA,eAAqB;QAArBA,0CAAqB","names":["i0","DeviceDataComponent","constructor","flaskApiService","ngOnInit","getData","deviceId","subscribe","response","data","errorMessage","error","console","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Vaishnavi Shukla\\OneDrive\\Desktop\\Minor project\\codebase\\front-end\\streamflux\\src\\app\\device-data\\device-data.component.html","C:\\Users\\Vaishnavi Shukla\\OneDrive\\Desktop\\Minor project\\codebase\\front-end\\streamflux\\src\\app\\device-data\\device-data.component.ts"],"sourcesContent":["<div>\n    <h2>Device Data</h2>\n    <label for=\"deviceId\">Device ID:</label>\n    <input id=\"deviceId\" [(ngModel)]=\"deviceId\" placeholder=\"Enter Device ID\">\n    <button (click)=\"getData()\">Get Data</button>\n  \n    <div *ngIf=\"errorMessage\" class=\"error\">\n      <p>{{ errorMessage }}</p>\n    </div>\n  \n    <table *ngIf=\"data.length > 0\" border=\"1\">\n      <thead>\n        <tr>\n          <!-- Adjust the column names based on your data structure -->\n          <th>Device ID</th>\n          <th>Water Level</th>\n          <th>Other Field 2</th>\n          <!-- Add more headers if needed -->\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let item of data\">\n          <!-- Adjust the fields to match your data structure -->\n          <td>{{ item.device_id }}</td>\n          <td>{{ item.water_level }}</td>\n          <!-- Add more columns if needed -->\n        </tr>\n      </tbody>\n    </table>\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\nimport { FlaskApiService } from '../flask-api.service';\n\n@Component({\n  selector: 'app-device-data',\n  templateUrl: './device-data.component.html',\n  styleUrls: ['./device-data.component.css']\n})\nexport class DeviceDataComponent implements OnInit {\n  deviceId!: number;\n  data: any[] = [];  // Array to store the response data\n  errorMessage: string | null = null;\n\n  constructor(private flaskApiService: FlaskApiService) { }\n\n  ngOnInit(): void { }\n\n  getData(): void {\n    this.flaskApiService.getData(this.deviceId).subscribe(\n      response => {\n        this.data = response;  // Assign response to data array\n        this.errorMessage = null;  // Clear any previous errors\n      },\n      error => {\n        console.error('Error fetching data', error);\n        this.errorMessage = 'An error occurred while fetching data. Please try again.';\n      }\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}